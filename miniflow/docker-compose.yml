version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: miniflow-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: miniflow
      MYSQL_USER: miniflow
      MYSQL_PASSWORD: miniflow123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/mysql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - miniflow-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: miniflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - miniflow-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: miniflow-backend
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USERNAME=miniflow
      - DATABASE_PASSWORD=miniflow123
      - DATABASE_NAME=miniflow
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - miniflow-network
    volumes:
      - ./backend/config:/config:ro

  # Frontend (will be added in later phases)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: miniflow-frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   restart: unless-stopped
  #   networks:
  #     - miniflow-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  miniflow-network:
    driver: bridge
